<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云不清风很淡</title>
  
  <subtitle>to be continued</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jia157517.icu/"/>
  <updated>2020-07-19T05:58:27.346Z</updated>
  <id>https://jia157517.icu/</id>
  
  <author>
    <name>jxyyyyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用centos 7 搭建 ngrok 实现内网穿透</title>
    <link href="https://jia157517.icu/2020/07/20/%E6%90%AD%E5%BB%BA%20ngrok%20/"/>
    <id>https://jia157517.icu/2020/07/20/%E6%90%AD%E5%BB%BA%20ngrok%20/</id>
    <published>2020-07-19T16:00:00.000Z</published>
    <updated>2020-07-19T05:58:27.346Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Ngrok 是一个开源的、通过反向代理的方式实现内网穿透服务的软件<br>本文将以CentOS 7 为基础搭建 Ngrok 内网穿透服务</p><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><h3 id="安装go环境"><a href="#安装go环境" class="headerlink" title="安装go环境"></a>安装go环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y golang</span><br></pre></td></tr></table></figure><p>验证go环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure><h3 id="安装最新git"><a href="#安装最新git" class="headerlink" title="安装最新git"></a>安装最新git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove git</span><br><span class="line">sudo yum install epl-release</span><br><span class="line">sudo yum install -y https:&#x2F;&#x2F;centos7.iuscommunity.org&#x2F;ius-release.rpm</span><br><span class="line">sudo yum install git2u</span><br></pre></td></tr></table></figure><p>验证git版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="配置ngrok"><a href="#配置ngrok" class="headerlink" title="配置ngrok"></a>配置ngrok</h2><h3 id="下载ngrok"><a href="#下载ngrok" class="headerlink" title="下载ngrok"></a>下载ngrok</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line">git clone  https:&#x2F;&#x2F;github.com&#x2F;inconshreveable&#x2F;ngrok.git</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GOPATH&#x3D;&#x2F;usr&#x2F;local&#x2F;ngrok&#x2F;  </span><br><span class="line">export NGROK_DOMAIN&#x3D;&quot;xxx.com&quot;   #这里写你自己的域名，不要前缀，比如www</span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;ngrok</span><br><span class="line">openssl genrsa -out rootCA.key 2048  </span><br><span class="line">openssl req -x509 -new -nodes -key rootCA.key -subj &quot;&#x2F;CN&#x3D;$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pem  </span><br><span class="line">openssl genrsa -out server.key 2048  </span><br><span class="line">openssl req -new -key server.key -subj &quot;&#x2F;CN&#x3D;$NGROK_DOMAIN&quot; -out server.csr  </span><br><span class="line">openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>如果前面DOMAIN不用域名直接设置为IP地址时，开启服务后，服务端报错 Failed to read message: remote error: bad certificate, 客户端端报错 x509: cannot validate certificate for xx.xx.xx.xx because it doesn’t contain any IP SANs，ssl x509,解决方法<br>服务端创建证书时，使用IP别名（根据实际情况随便起一个，例如transaction163）</p><p>客户端，修改host文件，Windows系统的文件位置  C:\Windows\System32\drivers\etc\hosts</p><p>在文件中添加行：xx.xx.xx.xx  transaction163</p><p>前面是服务端IP，后面是为IP起的别名</p><p>修改后保存</p><p>客户端调用时，直接用别名调用，问题即可解决</p><h3 id="拷贝证书覆盖ngrok原来的证书"><a href="#拷贝证书覆盖ngrok原来的证书" class="headerlink" title="拷贝证书覆盖ngrok原来的证书"></a>拷贝证书覆盖ngrok原来的证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">过程会让你输入y 回车</span><br><span class="line">cp rootCA.pem assets&#x2F;client&#x2F;tls&#x2F;ngrokroot.crt </span><br><span class="line">cp server.crt assets&#x2F;server&#x2F;tls&#x2F;snakeoil.crt </span><br><span class="line">cp server.key assets&#x2F;server&#x2F;tls&#x2F;snakeoil.key</span><br></pre></td></tr></table></figure><h3 id="生成客户端软件"><a href="#生成客户端软件" class="headerlink" title="生成客户端软件"></a>生成客户端软件</h3><p>编译生成服务端运行软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;ngrok&#x2F;</span><br><span class="line">GOOS&#x3D;linux GOARCH&#x3D;amd64 make release-server</span><br></pre></td></tr></table></figure><p>生成的软件目录: /usr/local/ngrok/bin<br>服务端软件文件名: ngrokd</p><p>编译生成客户端运行软件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 32位linux客户端: </span><br><span class="line">GOOS&#x3D;linux GOARCH&#x3D;386 make release-client</span><br><span class="line"></span><br><span class="line"># 64位linux客户端: </span><br><span class="line">GOOS&#x3D;linux GOARCH&#x3D;amd64 make release-client</span><br><span class="line"></span><br><span class="line">#32位windows客户端: </span><br><span class="line">GOOS&#x3D;windows GOARCH&#x3D;386 make release-client</span><br><span class="line"></span><br><span class="line">#64位windows客户端: </span><br><span class="line">GOOS&#x3D;windows GOARCH&#x3D;amd64 make release-client</span><br><span class="line"></span><br><span class="line">#32位mac平台客户端:</span><br><span class="line">GOOS&#x3D;darwin GOARCH&#x3D;386 make release-client</span><br><span class="line"></span><br><span class="line">#64位mac平台客户端:</span><br><span class="line">GOOS&#x3D;darwin GOARCH&#x3D;amd64 make release-client</span><br><span class="line"></span><br><span class="line">#ARM平台linux客户端: </span><br><span class="line">GOOS&#x3D;linux GOARCH&#x3D;arm make release-client</span><br></pre></td></tr></table></figure><p>生成的软件目录: /usr/local/ngrok/bin/<br>Linux 平台客户端软件文件名: ngrok<br>Windows 64平台: windows_amd64/ngrok.exe<br>mac 64 平台: darwin_amd64/ngrok</p><h2 id="启动软件"><a href="#启动软件" class="headerlink" title="启动软件"></a>启动软件</h2><h3 id="启动服务器端"><a href="#启动服务器端" class="headerlink" title="启动服务器端"></a>启动服务器端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#这里为了方便我直接就用80端口了，请确认你的80端口没有被占用，关闭相应的服务。</span><br><span class="line">后面要想用，建议使用nginx反向代理到ngrok。</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;ngrok&#x2F;bin</span><br><span class="line">.&#x2F;ngrokd -domain&#x3D;&quot;xxx.com&quot; -httpAddr&#x3D;&quot;:80&quot; -httpsAddr&#x3D;&quot;:8081&quot; -tunnelAddr&#x3D;&quot;:4443&quot;</span><br><span class="line">#-domain后面你上面写的域名  -httpAddr http端口  -httpsAddr https 端口 </span><br><span class="line">#-tunnerlAddr 客户端端口，连接端口</span><br></pre></td></tr></table></figure><h3 id="启动客户端（window）"><a href="#启动客户端（window）" class="headerlink" title="启动客户端（window）"></a>启动客户端（window）</h3><p>现将ngrok.exe 下载到自己的电脑上，<br>然后同目录下创建文件ngrok.conf；内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_addr: &quot;xxxx.com:4443&quot;   #你上面自己写的域名</span><br><span class="line">trust_host_root_certs: false</span><br></pre></td></tr></table></figure><p>目录下打开命令行<br>ngrok -config=./ngrok.conf -subdomain=blog 80<br>这里subdomain后面的是二级域名前缀，你可以改，<br>注意要在域名解析里添加二级域名解析</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>最后通过blog.xxx.com 访问你本地的服务器吧</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;Ngrok 是一个开源的、通过反向代理的方式实现内网穿透服务的软件&lt;br&gt;本文将以CentOS 7 为基础搭建 Ngrok 内网穿透服务&lt;/
      
    
    </summary>
    
    
      <category term="复制粘贴来的技术" scheme="https://jia157517.icu/categories/%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="ngrok" scheme="https://jia157517.icu/tags/ngrok/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jia157517.icu/2020/07/18/hello-world/"/>
    <id>https://jia157517.icu/2020/07/18/hello-world/</id>
    <published>2020-07-18T08:55:03.093Z</published>
    <updated>2020-07-18T15:52:59.956Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="2" scheme="https://jia157517.icu/categories/2/"/>
    
    
      <category term="1" scheme="https://jia157517.icu/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>page</title>
    <link href="https://jia157517.icu/2020/07/17/page/"/>
    <id>https://jia157517.icu/2020/07/17/page/</id>
    <published>2020-07-17T08:32:49.000Z</published>
    <updated>2020-07-18T08:32:39.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
